@model EZRAC.Risk.UI.Web.ViewModels.Claims.ContractInfoViewModel
@using EZRAC.Risk.UI.Web.Helper

<section class="panel panel-default complete-height bottom0">

   

    @using (Ajax.BeginForm("EditContractInfo", new { }, new AjaxOptions { UpdateTargetId = "contract-info", HttpMethod = "Post", OnFailure = "onErrorHandler(xhr)" }, new { @class = " bottom5  claim-info-form-editable", @id = "contract-info-form" }))
    {

         @Html.AntiForgeryToken()
        <header class="panel-heading">
            <h3 class="panel-title">
                Contract Information
                <span class="pull-right">

                    <a href="javascript:void(0);" onclick="$('#contract-info-form').submit();" class="inline-group save-icon-btn right10">
                        <span class="pull-right top3">SAVE</span>
                    </a>

                    @Ajax.MyActionLink("<span class='form-label'>CANCEL</span>", "ViewContractInfo", "display-inline  cancel-icon-btn top3", new { contractId = Model.Id, claimId = Model.ClaimId },
                                                       new AjaxOptions { UpdateTargetId = "contract-info", OnFailure = "onErrorHandler(xhr)" })

                </span>

            </h3>
        </header>

        <div class="top10 padding-horizontal-15">

            <div class="row bottom10">

                <div class="col-xs-4  top5 padding-right-0 ">
                    <label>@Html.DisplayNameFor(model => model.ContractNumber)</label>
                </div>
                <div class="col-xs-3 padding-left-0 ">
                    <div class="sandbox-container">
                       
                        @Html.TextBoxFor(model => model.ContractNumber, new { @class = "form-control", @readonly = "readonly" })
                        @Html.ValidationMessageFor(model => model.ContractNumber)

                    </div>
                </div>
            </div>

            <div class="row bottom10">
                <div class="col-xs-4  top5 padding-right-0 ">
                    <label>@Html.DisplayNameFor(model => model.PickupDate)</label>
                </div>
                <div class="col-xs-3 padding-left-0 ">
                    <div class="sandbox-container">

                        @if (Model.PickupDate.HasValue)
                        {
                            @Html.TextBoxFor(model => model.PickupDate, Model.PickupDate.Value.ToString(Constants.CrmsDateFormates.MMDDYYYY), new { @class = "form-control sand-datepicker datepickerCloseDate", disabled = "disabled" })
                            @Html.ValidationMessageFor(model => model.PickupDate)
                        }
                        else
                        {
                            @Html.TextBoxFor(model => model.PickupDate, new { @class = "form-control sand-datepicker datepickerCloseDate", disabled = "disabled" })
                            @Html.ValidationMessageFor(model => model.PickupDate)
                        }

                    </div>
                </div>
            </div>

            <div class="row bottom10">
                <div class="col-xs-4  top5 padding-right-0 ">
                    <label>@Html.DisplayNameFor(model => model.ReturnDate)</label>
                </div>
                <div class="col-xs-3 padding-left-0 ">
                    <div class="sandbox-container">

                        @if (Model.PickupDate.HasValue)
                        {
                            @Html.TextBoxFor(model => model.ReturnDate, Model.ReturnDate.Value.ToString(Constants.CrmsDateFormates.MMDDYYYY), new { @class = "form-control sand-datepicker datepickerCloseDate", disabled = "disabled" })
                            @Html.ValidationMessageFor(model => model.ReturnDate)
                        }
                        else
                        {
                            @Html.TextBoxFor(model => model.ReturnDate, new { @class = "form-control sand-datepicker datepickerCloseDate", disabled = "disabled" })
                            @Html.ValidationMessageFor(model => model.ReturnDate)
                        }

                    </div>
                </div>
            </div>

            <div class="row bottom10">
                <div class="col-xs-4  top5 padding-right-0 ">
                    <label for="firstname">@Html.DisplayNameFor(model => model.DaysOut)</label>
                </div>
                <div class="col-xs-8  padding-left-0 location-dropdown">

                    @Html.TextBoxFor(model => model.DaysOut, new { @class = "form-control", disabled = "disabled" })
                    @Html.ValidationMessageFor(model => model.DaysOut)

                </div>
            </div>

            <div class="row bottom10">
                <div class="col-xs-4  top5 padding-right-0 ">
                    <label for="firstname">@Html.DisplayNameFor(model => model.Miles)</label>
                </div>
                <div class="col-xs-8  padding-left-0 location-dropdown">

                    @Html.TextBoxFor(model => model.Miles, new { @class = "form-control", disabled = "disabled" })
                    @Html.ValidationMessageFor(model => model.Miles)
                </div>
            </div>

            <div class="row bottom10">
                <div class="col-xs-4  top5 padding-right-0 ">
                    <label for="firstname">@Html.DisplayNameFor(model => model.DailyRate)</label>
                </div>
                <div class="col-xs-8  padding-left-0 location-dropdown">

                    @Html.TextBoxFor(model => model.DailyRate, new { @class = "form-control", disabled = "disabled" })
                    @Html.ValidationMessageFor(model => model.DailyRate)
                </div>
            </div>

            <div class="row bottom10">
                <div class="col-xs-4  top5 padding-right-0 ">
                    <label for="firstname">@Html.DisplayNameFor(model => model.WeeklyRate)</label>
                </div>
                <div class="col-xs-8  padding-left-0 location-dropdown">

                    @Html.TextBoxFor(model => model.WeeklyRate, new { @class = "form-control", disabled = "disabled" })
                    @Html.ValidationMessageFor(model => model.WeeklyRate)

                </div>
            </div>

            <div class="row bottom10">
                <div class="col-xs-4  top5 padding-right-0 ">
                    <label for="firstname">@Html.DisplayNameFor(model => model.CDW)</label>
                </div>
                <div class="col-xs-2  padding-left-0 location-dropdown">

                    @Html.CheckBoxFor(model => model.CDW, new { @id = "cdw", @class = "middle", disabled = "disabled" })

                </div>

                @if (Model.CDW)
                {
                    <div id="cdw-voided">
                        <div class="col-xs-4  top5 padding-right-0 ">
                            <label for="firstname">@Html.DisplayNameFor(model => model.CDWVoided)</label>
                        </div>
                        <div class="col-xs-2  padding-left-0 location-dropdown">

                            @Html.CheckBoxFor(model => model.CDWVoided, new { @class = "middle" })

                        </div>
                    </div>
                }
                else
                {

                    <div id="cdw-voided" class="display-none">
                        <div class="col-xs-4  top5 padding-right-0 ">
                            <label for="firstname">@Html.DisplayNameFor(model => model.CDWVoided)</label>
                        </div>
                        <div class="col-xs-2  padding-left-0 location-dropdown">

                            @Html.CheckBoxFor(model => model.CDWVoided, new { @class = "middle" })

                        </div>
                    </div>
                }
            </div>

           

          
            <div class="row bottom10">
                <div class="col-xs-4  top5 padding-right-0 ">
                    <label for="firstname">@Html.DisplayNameFor(model => model.LDW)</label>
                </div>
                <div class="col-xs-2  padding-left-0 location-dropdown">

                    @Html.CheckBoxFor(model => model.LDW, new { @id = "ldw", @class = "middle", disabled = "disabled" })

                </div>

                @if (Model.LDW)
                {
                    <div id="ldw-voided">
                        <div class="col-xs-4  top5 padding-right-0 ">
                            <label for="firstname">@Html.DisplayNameFor(model => model.LDWVoided)</label>
                        </div>
                        <div class="col-xs-2  padding-left-0 location-dropdown">

                            @Html.CheckBoxFor(model => model.LDWVoided, new { @class = "middle" })

                        </div>


                    </div>
                }
                else
                {

                    <div class="display-none" id="ldw-voided">
                        <div class="col-xs-4  top5 padding-right-0 ">
                            <label for="firstname">@Html.DisplayNameFor(model => model.LDWVoided)</label>
                        </div>
                        <div class="col-xs-2  padding-left-0 location-dropdown">

                            @Html.CheckBoxFor(model => model.LDWVoided, new { @class = "middle" })

                        </div>
                    </div>

                }

            </div>

            <div class="row bottom10">
                <div class="col-xs-4  top5 padding-right-0 ">
                    <label for="firstname">@Html.DisplayNameFor(model => model.SLI)</label>
                </div>
                <div class="col-xs-8  padding-left-0 location-dropdown">

                    @Html.CheckBoxFor(model => model.SLI, new { @class = "middle", disabled = "disabled" })

                </div>
            </div>

            <div class="row bottom10">
                <div class="col-xs-4  top5 padding-right-0 ">
                    <label for="firstname">@Html.DisplayNameFor(model => model.LPC)</label>
                </div>
                <div class="col-xs-8  padding-left-0 location-dropdown">

                    @Html.CheckBoxFor(model => model.LPC, new { @class = "middle", disabled = "disabled" })

                </div>
            </div>

            <div class="row bottom10">
                <div class="col-xs-4  top5 padding-right-0 ">
                    <label for="firstname">@Html.DisplayNameFor(model => model.LPC2)</label>
                </div>
                <div class="col-xs-8  padding-left-0 location-dropdown">

                    @Html.CheckBoxFor(model => model.LPC2, new { @class = "middle", disabled = "disabled" })

                </div>
            </div>

            <div class="row bottom10">
                <div class="col-xs-4  top5 padding-right-0 ">
                    <label for="firstname">@Html.DisplayNameFor(model => model.GARS)</label>
                </div>
                <div class="col-xs-8  padding-left-0 location-dropdown">

                    @Html.CheckBoxFor(model => model.GARS, new { @class = "middle", disabled = "disabled" })

                </div>
            </div>
            

            @if (!String.IsNullOrEmpty(Model.CardType) || !String.IsNullOrEmpty(Model.CardExpDate))
            {
                <div class="row bottom10">
                    <div class="col-xs-4  top5 padding-right-0 ">
                        <label for="firstname">@Html.DisplayNameFor(model => model.CardNumber)</label>
                    </div>
                    <div class="col-xs-8  padding-left-0 location-dropdown">

                        @Html.TextBoxFor(model => model.CardNumber, new { @class = "form-control", placeholder = "Last four digits of credit card number" })
                        @Html.ValidationMessageFor(model => model.CardNumber)

                    </div>
                </div>
            }
            else
            {
                <div class="row bottom10">
                    <div class="col-xs-4  top5 padding-right-0 ">
                        <label for="firstname">@Html.DisplayNameFor(model => model.CardNumber)</label>
                    </div>
                    <div class="col-xs-8  padding-left-0 location-dropdown">

                        @Html.TextBoxFor(model => model.CardNumber, new { @class = "form-control", disabled = "disabled" })
                        @Html.ValidationMessageFor(model => model.CardNumber)

                    </div>
                </div>

            }


            <div class="row bottom10">
                <div class="col-xs-4  top5 padding-right-0 ">
                    <label for="firstname">@Html.DisplayNameFor(model => model.CardType)</label>
                </div>
                <div class="col-xs-8  padding-left-0 location-dropdown">

                    @Html.TextBoxFor(model => model.CardType, new { @class = "form-control", disabled = "disabled" })
                    @Html.ValidationMessageFor(model => model.CardType)

                </div>
            </div>
            <div class="row bottom10">
                <div class="col-xs-4  top5 padding-right-0 ">
                    <label for="firstname">@Html.DisplayNameFor(model => model.CardExpDate)</label>
                </div>
                <div class="col-xs-8  padding-left-0 location-dropdown">

                    @Html.TextBoxFor(model => model.CardExpDate, new { @class = "form-control", disabled = "disabled" })
                    @Html.ValidationMessageFor(model => model.CardExpDate)

                </div>
            </div>

        </div>




        @Html.HiddenFor(model => model.Id)
         @Html.HiddenFor(model => model.ClaimId)
    }

</section>

<script type="text/javascript">

    $(document).ready(function (e) {

        $(".selectpicker").selectpicker({});

        var dateToday = new Date();
        $(".datepickerOpenDate").datepicker({
            minDate: dateToday,
            //beforeShowDay: $.datepicker.noWeekends
        });

        var dateToday = new Date();
        $(".datepickerCloseDate").datepicker({
            //minDate: dateToday,
            //beforeShowDay: $.datepicker.noWeekends
        });

        $.validator.unobtrusive.parse("#contract-info-form");


        $('#cdw').change(function (event) {

            if (this.checked) {
                $('#cdw-voided').removeClass('display-none');
            } else {
                $('#cdw-voided').addClass('display-none');

            }

        });

        $('#ldw').change(function (event) {

            if (this.checked) {
                $('#ldw-voided').removeClass('display-none');
            } else {
                $('#ldw-voided').addClass('display-none');

            }

        });

    });
</script>